// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: camera_reachy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reachy.Sdk.Camera {

  /// <summary>Holder for reflection information generated from camera_reachy.proto</summary>
  public static partial class CameraReachyReflection {

    #region Descriptor
    /// <summary>File descriptor for camera_reachy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CameraReachyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjYW1lcmFfcmVhY2h5LnByb3RvEhFyZWFjaHkuc2RrLmNhbWVyYRoeZ29v",
            "Z2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8iFQoFSW1hZ2USDAoEZGF0YRgBIAEoDCIxCgZDYW1lcmES",
            "JwoCaWQYASABKA4yGy5yZWFjaHkuc2RrLmNhbWVyYS5DYW1lcmFJZCIzCgdD",
            "YW1lcmFzEigKA2lkcxgBIAMoDjIbLnJlYWNoeS5zZGsuY2FtZXJhLkNhbWVy",
            "YUlkIjkKDEltYWdlUmVxdWVzdBIpCgZjYW1lcmEYASABKAsyGS5yZWFjaHku",
            "c2RrLmNhbWVyYS5DYW1lcmEiRgoSU3RyZWFtSW1hZ2VSZXF1ZXN0EjAKB3Jl",
            "cXVlc3QYASABKAsyHy5yZWFjaHkuc2RrLmNhbWVyYS5JbWFnZVJlcXVlc3Qi",
            "GgoJWm9vbVNwZWVkEg0KBXNwZWVkGAEgASgNIgwKClpvb21Ib21pbmciRQoJ",
            "Wm9vbUxldmVsEjgKBWxldmVsGAEgASgOMikucmVhY2h5LnNkay5jYW1lcmEu",
            "Wm9vbUxldmVsUG9zc2liaWxpdGllcyIhCg5ab29tQ29tbWFuZEFjaxIPCgdz",
            "dWNjZXNzGAEgASgIIuoBCgtab29tQ29tbWFuZBIpCgZjYW1lcmEYASABKAsy",
            "GS5yZWFjaHkuc2RrLmNhbWVyYS5DYW1lcmESNwoOaG9taW5nX2NvbW1hbmQY",
            "AiABKAsyHS5yZWFjaHkuc2RrLmNhbWVyYS5ab29tSG9taW5nSAASNQoNc3Bl",
            "ZWRfY29tbWFuZBgDIAEoCzIcLnJlYWNoeS5zZGsuY2FtZXJhLlpvb21TcGVl",
            "ZEgAEjUKDWxldmVsX2NvbW1hbmQYBCABKAsyHC5yZWFjaHkuc2RrLmNhbWVy",
            "YS5ab29tTGV2ZWxIAEIJCgdjb21tYW5kItoBChBab29tRm9jdXNNZXNzYWdl",
            "EjAKCmxlZnRfZm9jdXMYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMy",
            "VmFsdWUSLwoJbGVmdF96b29tGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJ",
            "bnQzMlZhbHVlEjEKC3JpZ2h0X2ZvY3VzGAMgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlVJbnQzMlZhbHVlEjAKCnJpZ2h0X3pvb20YBCABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuVUludDMyVmFsdWUqHwoIQ2FtZXJhSWQSCAoETEVGVBAAEgkK",
            "BVJJR0hUEAEqPgoWWm9vbUxldmVsUG9zc2liaWxpdGllcxIICgRaRVJPEAAS",
            "BgoCSU4QARIJCgVJTlRFUhACEgcKA09VVBADMtQFCg1DYW1lcmFTZXJ2aWNl",
            "EkUKCEdldEltYWdlEh8ucmVhY2h5LnNkay5jYW1lcmEuSW1hZ2VSZXF1ZXN0",
            "GhgucmVhY2h5LnNkay5jYW1lcmEuSW1hZ2USUAoLU3RyZWFtSW1hZ2USJS5y",
            "ZWFjaHkuc2RrLmNhbWVyYS5TdHJlYW1JbWFnZVJlcXVlc3QaGC5yZWFjaHku",
            "c2RrLmNhbWVyYS5JbWFnZTABEkcKDEdldFpvb21MZXZlbBIZLnJlYWNoeS5z",
            "ZGsuY2FtZXJhLkNhbWVyYRocLnJlYWNoeS5zZGsuY2FtZXJhLlpvb21MZXZl",
            "bBJHCgxHZXRab29tU3BlZWQSGS5yZWFjaHkuc2RrLmNhbWVyYS5DYW1lcmEa",
            "HC5yZWFjaHkuc2RrLmNhbWVyYS5ab29tU3BlZWQSVAoPU2VuZFpvb21Db21t",
            "YW5kEh4ucmVhY2h5LnNkay5jYW1lcmEuWm9vbUNvbW1hbmQaIS5yZWFjaHku",
            "c2RrLmNhbWVyYS5ab29tQ29tbWFuZEFjaxJLCgxHZXRab29tRm9jdXMSFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkaIy5yZWFjaHkuc2RrLmNhbWVyYS5ab29t",
            "Rm9jdXNNZXNzYWdlElYKDFNldFpvb21Gb2N1cxIjLnJlYWNoeS5zZGsuY2Ft",
            "ZXJhLlpvb21Gb2N1c01lc3NhZ2UaIS5yZWFjaHkuc2RrLmNhbWVyYS5ab29t",
            "Q29tbWFuZEFjaxJOCg5TdGFydEF1dG9mb2N1cxIZLnJlYWNoeS5zZGsuY2Ft",
            "ZXJhLkNhbWVyYRohLnJlYWNoeS5zZGsuY2FtZXJhLlpvb21Db21tYW5kQWNr",
            "Ek0KDVN0b3BBdXRvZm9jdXMSGS5yZWFjaHkuc2RrLmNhbWVyYS5DYW1lcmEa",
            "IS5yZWFjaHkuc2RrLmNhbWVyYS5ab29tQ29tbWFuZEFja2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Reachy.Sdk.Camera.CameraId), typeof(global::Reachy.Sdk.Camera.ZoomLevelPossibilities), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.Image), global::Reachy.Sdk.Camera.Image.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.Camera), global::Reachy.Sdk.Camera.Camera.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.Cameras), global::Reachy.Sdk.Camera.Cameras.Parser, new[]{ "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ImageRequest), global::Reachy.Sdk.Camera.ImageRequest.Parser, new[]{ "Camera" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.StreamImageRequest), global::Reachy.Sdk.Camera.StreamImageRequest.Parser, new[]{ "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomSpeed), global::Reachy.Sdk.Camera.ZoomSpeed.Parser, new[]{ "Speed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomHoming), global::Reachy.Sdk.Camera.ZoomHoming.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomLevel), global::Reachy.Sdk.Camera.ZoomLevel.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomCommandAck), global::Reachy.Sdk.Camera.ZoomCommandAck.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomCommand), global::Reachy.Sdk.Camera.ZoomCommand.Parser, new[]{ "Camera", "HomingCommand", "SpeedCommand", "LevelCommand" }, new[]{ "Command" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Camera.ZoomFocusMessage), global::Reachy.Sdk.Camera.ZoomFocusMessage.Parser, new[]{ "LeftFocus", "LeftZoom", "RightFocus", "RightZoom" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CameraId {
    [pbr::OriginalName("LEFT")] Left = 0,
    [pbr::OriginalName("RIGHT")] Right = 1,
  }

  public enum ZoomLevelPossibilities {
    [pbr::OriginalName("ZERO")] Zero = 0,
    [pbr::OriginalName("IN")] In = 1,
    [pbr::OriginalName("INTER")] Inter = 2,
    [pbr::OriginalName("OUT")] Out = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Image : pb::IMessage<Image>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Camera : pb::IMessage<Camera>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Camera> _parser = new pb::MessageParser<Camera>(() => new Camera());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Camera> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Camera() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Camera(Camera other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Camera Clone() {
      return new Camera(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Reachy.Sdk.Camera.CameraId id_ = global::Reachy.Sdk.Camera.CameraId.Left;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.CameraId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Camera);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Camera other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != global::Reachy.Sdk.Camera.CameraId.Left) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != global::Reachy.Sdk.Camera.CameraId.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != global::Reachy.Sdk.Camera.CameraId.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != global::Reachy.Sdk.Camera.CameraId.Left) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Camera other) {
      if (other == null) {
        return;
      }
      if (other.Id != global::Reachy.Sdk.Camera.CameraId.Left) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = (global::Reachy.Sdk.Camera.CameraId) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = (global::Reachy.Sdk.Camera.CameraId) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cameras : pb::IMessage<Cameras>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cameras> _parser = new pb::MessageParser<Cameras>(() => new Cameras());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cameras> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cameras() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cameras(Cameras other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cameras Clone() {
      return new Cameras(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Reachy.Sdk.Camera.CameraId> _repeated_ids_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Reachy.Sdk.Camera.CameraId) x);
    private readonly pbc::RepeatedField<global::Reachy.Sdk.Camera.CameraId> ids_ = new pbc::RepeatedField<global::Reachy.Sdk.Camera.CameraId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Reachy.Sdk.Camera.CameraId> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cameras);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cameras other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ids_.WriteTo(ref output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cameras other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(ref input, _repeated_ids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImageRequest : pb::IMessage<ImageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageRequest> _parser = new pb::MessageParser<ImageRequest>(() => new ImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRequest(ImageRequest other) : this() {
      camera_ = other.camera_ != null ? other.camera_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRequest Clone() {
      return new ImageRequest(this);
    }

    /// <summary>Field number for the "camera" field.</summary>
    public const int CameraFieldNumber = 1;
    private global::Reachy.Sdk.Camera.Camera camera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.Camera Camera {
      get { return camera_; }
      set {
        camera_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Camera, other.Camera)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (camera_ != null) hash ^= Camera.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (camera_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Camera);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (camera_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Camera);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (camera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.camera_ != null) {
        if (camera_ == null) {
          Camera = new global::Reachy.Sdk.Camera.Camera();
        }
        Camera.MergeFrom(other.Camera);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (camera_ == null) {
              Camera = new global::Reachy.Sdk.Camera.Camera();
            }
            input.ReadMessage(Camera);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (camera_ == null) {
              Camera = new global::Reachy.Sdk.Camera.Camera();
            }
            input.ReadMessage(Camera);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamImageRequest : pb::IMessage<StreamImageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamImageRequest> _parser = new pb::MessageParser<StreamImageRequest>(() => new StreamImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamImageRequest(StreamImageRequest other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamImageRequest Clone() {
      return new StreamImageRequest(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::Reachy.Sdk.Camera.ImageRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.ImageRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Reachy.Sdk.Camera.ImageRequest();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Reachy.Sdk.Camera.ImageRequest();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Reachy.Sdk.Camera.ImageRequest();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomSpeed : pb::IMessage<ZoomSpeed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomSpeed> _parser = new pb::MessageParser<ZoomSpeed>(() => new ZoomSpeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomSpeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomSpeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomSpeed(ZoomSpeed other) : this() {
      speed_ = other.speed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomSpeed Clone() {
      return new ZoomSpeed(this);
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 1;
    private uint speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomSpeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomSpeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Speed != other.Speed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Speed != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Speed != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Speed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomSpeed other) {
      if (other == null) {
        return;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Speed = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Speed = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomHoming : pb::IMessage<ZoomHoming>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomHoming> _parser = new pb::MessageParser<ZoomHoming>(() => new ZoomHoming());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomHoming> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomHoming() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomHoming(ZoomHoming other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomHoming Clone() {
      return new ZoomHoming(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomHoming);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomHoming other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomHoming other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomLevel : pb::IMessage<ZoomLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomLevel> _parser = new pb::MessageParser<ZoomLevel>(() => new ZoomLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomLevel(ZoomLevel other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomLevel Clone() {
      return new ZoomLevel(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Reachy.Sdk.Camera.ZoomLevelPossibilities level_ = global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.ZoomLevelPossibilities Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomLevel other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::Reachy.Sdk.Camera.ZoomLevelPossibilities.Zero) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::Reachy.Sdk.Camera.ZoomLevelPossibilities) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::Reachy.Sdk.Camera.ZoomLevelPossibilities) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomCommandAck : pb::IMessage<ZoomCommandAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomCommandAck> _parser = new pb::MessageParser<ZoomCommandAck>(() => new ZoomCommandAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomCommandAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommandAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommandAck(ZoomCommandAck other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommandAck Clone() {
      return new ZoomCommandAck(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomCommandAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomCommandAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomCommandAck other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomCommand : pb::IMessage<ZoomCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomCommand> _parser = new pb::MessageParser<ZoomCommand>(() => new ZoomCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommand(ZoomCommand other) : this() {
      camera_ = other.camera_ != null ? other.camera_.Clone() : null;
      switch (other.CommandCase) {
        case CommandOneofCase.HomingCommand:
          HomingCommand = other.HomingCommand.Clone();
          break;
        case CommandOneofCase.SpeedCommand:
          SpeedCommand = other.SpeedCommand.Clone();
          break;
        case CommandOneofCase.LevelCommand:
          LevelCommand = other.LevelCommand.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomCommand Clone() {
      return new ZoomCommand(this);
    }

    /// <summary>Field number for the "camera" field.</summary>
    public const int CameraFieldNumber = 1;
    private global::Reachy.Sdk.Camera.Camera camera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.Camera Camera {
      get { return camera_; }
      set {
        camera_ = value;
      }
    }

    /// <summary>Field number for the "homing_command" field.</summary>
    public const int HomingCommandFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.ZoomHoming HomingCommand {
      get { return commandCase_ == CommandOneofCase.HomingCommand ? (global::Reachy.Sdk.Camera.ZoomHoming) command_ : null; }
      set {
        command_ = value;
        commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.HomingCommand;
      }
    }

    /// <summary>Field number for the "speed_command" field.</summary>
    public const int SpeedCommandFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.ZoomSpeed SpeedCommand {
      get { return commandCase_ == CommandOneofCase.SpeedCommand ? (global::Reachy.Sdk.Camera.ZoomSpeed) command_ : null; }
      set {
        command_ = value;
        commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.SpeedCommand;
      }
    }

    /// <summary>Field number for the "level_command" field.</summary>
    public const int LevelCommandFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Camera.ZoomLevel LevelCommand {
      get { return commandCase_ == CommandOneofCase.LevelCommand ? (global::Reachy.Sdk.Camera.ZoomLevel) command_ : null; }
      set {
        command_ = value;
        commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.LevelCommand;
      }
    }

    private object command_;
    /// <summary>Enum of possible cases for the "command" oneof.</summary>
    public enum CommandOneofCase {
      None = 0,
      HomingCommand = 2,
      SpeedCommand = 3,
      LevelCommand = 4,
    }
    private CommandOneofCase commandCase_ = CommandOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOneofCase CommandCase {
      get { return commandCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommand() {
      commandCase_ = CommandOneofCase.None;
      command_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Camera, other.Camera)) return false;
      if (!object.Equals(HomingCommand, other.HomingCommand)) return false;
      if (!object.Equals(SpeedCommand, other.SpeedCommand)) return false;
      if (!object.Equals(LevelCommand, other.LevelCommand)) return false;
      if (CommandCase != other.CommandCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (camera_ != null) hash ^= Camera.GetHashCode();
      if (commandCase_ == CommandOneofCase.HomingCommand) hash ^= HomingCommand.GetHashCode();
      if (commandCase_ == CommandOneofCase.SpeedCommand) hash ^= SpeedCommand.GetHashCode();
      if (commandCase_ == CommandOneofCase.LevelCommand) hash ^= LevelCommand.GetHashCode();
      hash ^= (int) commandCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (camera_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Camera);
      }
      if (commandCase_ == CommandOneofCase.HomingCommand) {
        output.WriteRawTag(18);
        output.WriteMessage(HomingCommand);
      }
      if (commandCase_ == CommandOneofCase.SpeedCommand) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeedCommand);
      }
      if (commandCase_ == CommandOneofCase.LevelCommand) {
        output.WriteRawTag(34);
        output.WriteMessage(LevelCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (camera_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Camera);
      }
      if (commandCase_ == CommandOneofCase.HomingCommand) {
        output.WriteRawTag(18);
        output.WriteMessage(HomingCommand);
      }
      if (commandCase_ == CommandOneofCase.SpeedCommand) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeedCommand);
      }
      if (commandCase_ == CommandOneofCase.LevelCommand) {
        output.WriteRawTag(34);
        output.WriteMessage(LevelCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (camera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
      }
      if (commandCase_ == CommandOneofCase.HomingCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomingCommand);
      }
      if (commandCase_ == CommandOneofCase.SpeedCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeedCommand);
      }
      if (commandCase_ == CommandOneofCase.LevelCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelCommand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomCommand other) {
      if (other == null) {
        return;
      }
      if (other.camera_ != null) {
        if (camera_ == null) {
          Camera = new global::Reachy.Sdk.Camera.Camera();
        }
        Camera.MergeFrom(other.Camera);
      }
      switch (other.CommandCase) {
        case CommandOneofCase.HomingCommand:
          if (HomingCommand == null) {
            HomingCommand = new global::Reachy.Sdk.Camera.ZoomHoming();
          }
          HomingCommand.MergeFrom(other.HomingCommand);
          break;
        case CommandOneofCase.SpeedCommand:
          if (SpeedCommand == null) {
            SpeedCommand = new global::Reachy.Sdk.Camera.ZoomSpeed();
          }
          SpeedCommand.MergeFrom(other.SpeedCommand);
          break;
        case CommandOneofCase.LevelCommand:
          if (LevelCommand == null) {
            LevelCommand = new global::Reachy.Sdk.Camera.ZoomLevel();
          }
          LevelCommand.MergeFrom(other.LevelCommand);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (camera_ == null) {
              Camera = new global::Reachy.Sdk.Camera.Camera();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 18: {
            global::Reachy.Sdk.Camera.ZoomHoming subBuilder = new global::Reachy.Sdk.Camera.ZoomHoming();
            if (commandCase_ == CommandOneofCase.HomingCommand) {
              subBuilder.MergeFrom(HomingCommand);
            }
            input.ReadMessage(subBuilder);
            HomingCommand = subBuilder;
            break;
          }
          case 26: {
            global::Reachy.Sdk.Camera.ZoomSpeed subBuilder = new global::Reachy.Sdk.Camera.ZoomSpeed();
            if (commandCase_ == CommandOneofCase.SpeedCommand) {
              subBuilder.MergeFrom(SpeedCommand);
            }
            input.ReadMessage(subBuilder);
            SpeedCommand = subBuilder;
            break;
          }
          case 34: {
            global::Reachy.Sdk.Camera.ZoomLevel subBuilder = new global::Reachy.Sdk.Camera.ZoomLevel();
            if (commandCase_ == CommandOneofCase.LevelCommand) {
              subBuilder.MergeFrom(LevelCommand);
            }
            input.ReadMessage(subBuilder);
            LevelCommand = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (camera_ == null) {
              Camera = new global::Reachy.Sdk.Camera.Camera();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 18: {
            global::Reachy.Sdk.Camera.ZoomHoming subBuilder = new global::Reachy.Sdk.Camera.ZoomHoming();
            if (commandCase_ == CommandOneofCase.HomingCommand) {
              subBuilder.MergeFrom(HomingCommand);
            }
            input.ReadMessage(subBuilder);
            HomingCommand = subBuilder;
            break;
          }
          case 26: {
            global::Reachy.Sdk.Camera.ZoomSpeed subBuilder = new global::Reachy.Sdk.Camera.ZoomSpeed();
            if (commandCase_ == CommandOneofCase.SpeedCommand) {
              subBuilder.MergeFrom(SpeedCommand);
            }
            input.ReadMessage(subBuilder);
            SpeedCommand = subBuilder;
            break;
          }
          case 34: {
            global::Reachy.Sdk.Camera.ZoomLevel subBuilder = new global::Reachy.Sdk.Camera.ZoomLevel();
            if (commandCase_ == CommandOneofCase.LevelCommand) {
              subBuilder.MergeFrom(LevelCommand);
            }
            input.ReadMessage(subBuilder);
            LevelCommand = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ZoomFocusMessage : pb::IMessage<ZoomFocusMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ZoomFocusMessage> _parser = new pb::MessageParser<ZoomFocusMessage>(() => new ZoomFocusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZoomFocusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Camera.CameraReachyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomFocusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomFocusMessage(ZoomFocusMessage other) : this() {
      LeftFocus = other.LeftFocus;
      LeftZoom = other.LeftZoom;
      RightFocus = other.RightFocus;
      RightZoom = other.RightZoom;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZoomFocusMessage Clone() {
      return new ZoomFocusMessage(this);
    }

    /// <summary>Field number for the "left_focus" field.</summary>
    public const int LeftFocusFieldNumber = 1;
    private static readonly pb::FieldCodec<uint?> _single_leftFocus_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
    private uint? leftFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? LeftFocus {
      get { return leftFocus_; }
      set {
        leftFocus_ = value;
      }
    }


    /// <summary>Field number for the "left_zoom" field.</summary>
    public const int LeftZoomFieldNumber = 2;
    private static readonly pb::FieldCodec<uint?> _single_leftZoom_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
    private uint? leftZoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? LeftZoom {
      get { return leftZoom_; }
      set {
        leftZoom_ = value;
      }
    }


    /// <summary>Field number for the "right_focus" field.</summary>
    public const int RightFocusFieldNumber = 3;
    private static readonly pb::FieldCodec<uint?> _single_rightFocus_codec = pb::FieldCodec.ForStructWrapper<uint>(26);
    private uint? rightFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? RightFocus {
      get { return rightFocus_; }
      set {
        rightFocus_ = value;
      }
    }


    /// <summary>Field number for the "right_zoom" field.</summary>
    public const int RightZoomFieldNumber = 4;
    private static readonly pb::FieldCodec<uint?> _single_rightZoom_codec = pb::FieldCodec.ForStructWrapper<uint>(34);
    private uint? rightZoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? RightZoom {
      get { return rightZoom_; }
      set {
        rightZoom_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZoomFocusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZoomFocusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftFocus != other.LeftFocus) return false;
      if (LeftZoom != other.LeftZoom) return false;
      if (RightFocus != other.RightFocus) return false;
      if (RightZoom != other.RightZoom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leftFocus_ != null) hash ^= LeftFocus.GetHashCode();
      if (leftZoom_ != null) hash ^= LeftZoom.GetHashCode();
      if (rightFocus_ != null) hash ^= RightFocus.GetHashCode();
      if (rightZoom_ != null) hash ^= RightZoom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (leftFocus_ != null) {
        _single_leftFocus_codec.WriteTagAndValue(output, LeftFocus);
      }
      if (leftZoom_ != null) {
        _single_leftZoom_codec.WriteTagAndValue(output, LeftZoom);
      }
      if (rightFocus_ != null) {
        _single_rightFocus_codec.WriteTagAndValue(output, RightFocus);
      }
      if (rightZoom_ != null) {
        _single_rightZoom_codec.WriteTagAndValue(output, RightZoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (leftFocus_ != null) {
        _single_leftFocus_codec.WriteTagAndValue(ref output, LeftFocus);
      }
      if (leftZoom_ != null) {
        _single_leftZoom_codec.WriteTagAndValue(ref output, LeftZoom);
      }
      if (rightFocus_ != null) {
        _single_rightFocus_codec.WriteTagAndValue(ref output, RightFocus);
      }
      if (rightZoom_ != null) {
        _single_rightZoom_codec.WriteTagAndValue(ref output, RightZoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leftFocus_ != null) {
        size += _single_leftFocus_codec.CalculateSizeWithTag(LeftFocus);
      }
      if (leftZoom_ != null) {
        size += _single_leftZoom_codec.CalculateSizeWithTag(LeftZoom);
      }
      if (rightFocus_ != null) {
        size += _single_rightFocus_codec.CalculateSizeWithTag(RightFocus);
      }
      if (rightZoom_ != null) {
        size += _single_rightZoom_codec.CalculateSizeWithTag(RightZoom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZoomFocusMessage other) {
      if (other == null) {
        return;
      }
      if (other.leftFocus_ != null) {
        if (leftFocus_ == null || other.LeftFocus != 0) {
          LeftFocus = other.LeftFocus;
        }
      }
      if (other.leftZoom_ != null) {
        if (leftZoom_ == null || other.LeftZoom != 0) {
          LeftZoom = other.LeftZoom;
        }
      }
      if (other.rightFocus_ != null) {
        if (rightFocus_ == null || other.RightFocus != 0) {
          RightFocus = other.RightFocus;
        }
      }
      if (other.rightZoom_ != null) {
        if (rightZoom_ == null || other.RightZoom != 0) {
          RightZoom = other.RightZoom;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uint? value = _single_leftFocus_codec.Read(input);
            if (leftFocus_ == null || value != 0) {
              LeftFocus = value;
            }
            break;
          }
          case 18: {
            uint? value = _single_leftZoom_codec.Read(input);
            if (leftZoom_ == null || value != 0) {
              LeftZoom = value;
            }
            break;
          }
          case 26: {
            uint? value = _single_rightFocus_codec.Read(input);
            if (rightFocus_ == null || value != 0) {
              RightFocus = value;
            }
            break;
          }
          case 34: {
            uint? value = _single_rightZoom_codec.Read(input);
            if (rightZoom_ == null || value != 0) {
              RightZoom = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uint? value = _single_leftFocus_codec.Read(ref input);
            if (leftFocus_ == null || value != 0) {
              LeftFocus = value;
            }
            break;
          }
          case 18: {
            uint? value = _single_leftZoom_codec.Read(ref input);
            if (leftZoom_ == null || value != 0) {
              LeftZoom = value;
            }
            break;
          }
          case 26: {
            uint? value = _single_rightFocus_codec.Read(ref input);
            if (rightFocus_ == null || value != 0) {
              RightFocus = value;
            }
            break;
          }
          case 34: {
            uint? value = _single_rightZoom_codec.Read(ref input);
            if (rightZoom_ == null || value != 0) {
              RightZoom = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
