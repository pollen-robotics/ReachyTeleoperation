// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: arm_kinematics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reachy.Sdk.Kinematics {

  /// <summary>Holder for reflection information generated from arm_kinematics.proto</summary>
  public static partial class ArmKinematicsReflection {

    #region Descriptor
    /// <summary>File descriptor for arm_kinematics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArmKinematicsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhcm1fa2luZW1hdGljcy5wcm90bxIVcmVhY2h5LnNkay5raW5lbWF0aWNz",
            "GhBraW5lbWF0aWNzLnByb3RvIm4KDkFybUVuZEVmZmVjdG9yEiwKBHNpZGUY",
            "ASABKA4yHi5yZWFjaHkuc2RrLmtpbmVtYXRpY3MuQXJtU2lkZRIuCgRwb3Nl",
            "GAIgASgLMiAucmVhY2h5LnNkay5raW5lbWF0aWNzLk1hdHJpeDR4NCJ5ChBB",
            "cm1Kb2ludFBvc2l0aW9uEiwKBHNpZGUYASABKA4yHi5yZWFjaHkuc2RrLmtp",
            "bmVtYXRpY3MuQXJtU2lkZRI3Cglwb3NpdGlvbnMYAiABKAsyJC5yZWFjaHku",
            "c2RrLmtpbmVtYXRpY3MuSm9pbnRQb3NpdGlvbiJNCgxBcm1GS1JlcXVlc3QS",
            "PQoMYXJtX3Bvc2l0aW9uGAEgASgLMicucmVhY2h5LnNkay5raW5lbWF0aWNz",
            "LkFybUpvaW50UG9zaXRpb24iXQoNQXJtRktTb2x1dGlvbhIPCgdzdWNjZXNz",
            "GAEgASgIEjsKDGVuZF9lZmZlY3RvchgCIAEoCzIlLnJlYWNoeS5zZGsua2lu",
            "ZW1hdGljcy5Bcm1FbmRFZmZlY3RvciJ3CgxBcm1JS1JlcXVlc3QSNQoGdGFy",
            "Z2V0GAEgASgLMiUucmVhY2h5LnNkay5raW5lbWF0aWNzLkFybUVuZEVmZmVj",
            "dG9yEjAKAnEwGAIgASgLMiQucmVhY2h5LnNkay5raW5lbWF0aWNzLkpvaW50",
            "UG9zaXRpb24iXwoNQXJtSUtTb2x1dGlvbhIPCgdzdWNjZXNzGAEgASgIEj0K",
            "DGFybV9wb3NpdGlvbhgCIAEoCzInLnJlYWNoeS5zZGsua2luZW1hdGljcy5B",
            "cm1Kb2ludFBvc2l0aW9uKh4KB0FybVNpZGUSCAoETEVGVBAAEgkKBVJJR0hU",
            "EAEyxQEKDUFybUtpbmVtYXRpY3MSWQoMQ29tcHV0ZUFybUZLEiMucmVhY2h5",
            "LnNkay5raW5lbWF0aWNzLkFybUZLUmVxdWVzdBokLnJlYWNoeS5zZGsua2lu",
            "ZW1hdGljcy5Bcm1GS1NvbHV0aW9uElkKDENvbXB1dGVBcm1JSxIjLnJlYWNo",
            "eS5zZGsua2luZW1hdGljcy5Bcm1JS1JlcXVlc3QaJC5yZWFjaHkuc2RrLmtp",
            "bmVtYXRpY3MuQXJtSUtTb2x1dGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Reachy.Sdk.Kinematics.KinematicsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Reachy.Sdk.Kinematics.ArmSide), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmEndEffector), global::Reachy.Sdk.Kinematics.ArmEndEffector.Parser, new[]{ "Side", "Pose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmJointPosition), global::Reachy.Sdk.Kinematics.ArmJointPosition.Parser, new[]{ "Side", "Positions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmFKRequest), global::Reachy.Sdk.Kinematics.ArmFKRequest.Parser, new[]{ "ArmPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmFKSolution), global::Reachy.Sdk.Kinematics.ArmFKSolution.Parser, new[]{ "Success", "EndEffector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmIKRequest), global::Reachy.Sdk.Kinematics.ArmIKRequest.Parser, new[]{ "Target", "Q0" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.ArmIKSolution), global::Reachy.Sdk.Kinematics.ArmIKSolution.Parser, new[]{ "Success", "ArmPosition" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ArmSide {
    [pbr::OriginalName("LEFT")] Left = 0,
    [pbr::OriginalName("RIGHT")] Right = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ArmEndEffector : pb::IMessage<ArmEndEffector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmEndEffector> _parser = new pb::MessageParser<ArmEndEffector>(() => new ArmEndEffector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmEndEffector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmEndEffector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmEndEffector(ArmEndEffector other) : this() {
      side_ = other.side_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmEndEffector Clone() {
      return new ArmEndEffector(this);
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmSide side_ = global::Reachy.Sdk.Kinematics.ArmSide.Left;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.Matrix4x4 pose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.Matrix4x4 Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmEndEffector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmEndEffector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Side != other.Side) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) hash ^= Side.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmEndEffector other) {
      if (other == null) {
        return;
      }
      if (other.Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        Side = other.Side;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Reachy.Sdk.Kinematics.Matrix4x4();
        }
        Pose.MergeFrom(other.Pose);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Side = (global::Reachy.Sdk.Kinematics.ArmSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Reachy.Sdk.Kinematics.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Side = (global::Reachy.Sdk.Kinematics.ArmSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Reachy.Sdk.Kinematics.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmJointPosition : pb::IMessage<ArmJointPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmJointPosition> _parser = new pb::MessageParser<ArmJointPosition>(() => new ArmJointPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmJointPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmJointPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmJointPosition(ArmJointPosition other) : this() {
      side_ = other.side_;
      positions_ = other.positions_ != null ? other.positions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmJointPosition Clone() {
      return new ArmJointPosition(this);
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmSide side_ = global::Reachy.Sdk.Kinematics.ArmSide.Left;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmSide Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.JointPosition positions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.JointPosition Positions {
      get { return positions_; }
      set {
        positions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmJointPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmJointPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Side != other.Side) return false;
      if (!object.Equals(Positions, other.Positions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) hash ^= Side.GetHashCode();
      if (positions_ != null) hash ^= Positions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (positions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Positions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Side);
      }
      if (positions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Positions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (positions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Positions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmJointPosition other) {
      if (other == null) {
        return;
      }
      if (other.Side != global::Reachy.Sdk.Kinematics.ArmSide.Left) {
        Side = other.Side;
      }
      if (other.positions_ != null) {
        if (positions_ == null) {
          Positions = new global::Reachy.Sdk.Kinematics.JointPosition();
        }
        Positions.MergeFrom(other.Positions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Side = (global::Reachy.Sdk.Kinematics.ArmSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (positions_ == null) {
              Positions = new global::Reachy.Sdk.Kinematics.JointPosition();
            }
            input.ReadMessage(Positions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Side = (global::Reachy.Sdk.Kinematics.ArmSide) input.ReadEnum();
            break;
          }
          case 18: {
            if (positions_ == null) {
              Positions = new global::Reachy.Sdk.Kinematics.JointPosition();
            }
            input.ReadMessage(Positions);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmFKRequest : pb::IMessage<ArmFKRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmFKRequest> _parser = new pb::MessageParser<ArmFKRequest>(() => new ArmFKRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmFKRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKRequest(ArmFKRequest other) : this() {
      armPosition_ = other.armPosition_ != null ? other.armPosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKRequest Clone() {
      return new ArmFKRequest(this);
    }

    /// <summary>Field number for the "arm_position" field.</summary>
    public const int ArmPositionFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmJointPosition armPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmJointPosition ArmPosition {
      get { return armPosition_; }
      set {
        armPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmFKRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmFKRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ArmPosition, other.ArmPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (armPosition_ != null) hash ^= ArmPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (armPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArmPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (armPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArmPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (armPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArmPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmFKRequest other) {
      if (other == null) {
        return;
      }
      if (other.armPosition_ != null) {
        if (armPosition_ == null) {
          ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
        }
        ArmPosition.MergeFrom(other.ArmPosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (armPosition_ == null) {
              ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
            }
            input.ReadMessage(ArmPosition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (armPosition_ == null) {
              ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
            }
            input.ReadMessage(ArmPosition);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmFKSolution : pb::IMessage<ArmFKSolution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmFKSolution> _parser = new pb::MessageParser<ArmFKSolution>(() => new ArmFKSolution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmFKSolution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKSolution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKSolution(ArmFKSolution other) : this() {
      success_ = other.success_;
      endEffector_ = other.endEffector_ != null ? other.endEffector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmFKSolution Clone() {
      return new ArmFKSolution(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "end_effector" field.</summary>
    public const int EndEffectorFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.ArmEndEffector endEffector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmEndEffector EndEffector {
      get { return endEffector_; }
      set {
        endEffector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmFKSolution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmFKSolution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(EndEffector, other.EndEffector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (endEffector_ != null) hash ^= EndEffector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (endEffector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndEffector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (endEffector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndEffector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (endEffector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndEffector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmFKSolution other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.endEffector_ != null) {
        if (endEffector_ == null) {
          EndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
        }
        EndEffector.MergeFrom(other.EndEffector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (endEffector_ == null) {
              EndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(EndEffector);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (endEffector_ == null) {
              EndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(EndEffector);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmIKRequest : pb::IMessage<ArmIKRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmIKRequest> _parser = new pb::MessageParser<ArmIKRequest>(() => new ArmIKRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmIKRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKRequest(ArmIKRequest other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      q0_ = other.q0_ != null ? other.q0_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKRequest Clone() {
      return new ArmIKRequest(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmEndEffector target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmEndEffector Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "q0" field.</summary>
    public const int Q0FieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.JointPosition q0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.JointPosition Q0 {
      get { return q0_; }
      set {
        q0_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmIKRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmIKRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(Q0, other.Q0)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (q0_ != null) hash ^= Q0.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (q0_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Q0);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (q0_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Q0);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (q0_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Q0);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmIKRequest other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.q0_ != null) {
        if (q0_ == null) {
          Q0 = new global::Reachy.Sdk.Kinematics.JointPosition();
        }
        Q0.MergeFrom(other.Q0);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(Target);
            break;
          }
          case 18: {
            if (q0_ == null) {
              Q0 = new global::Reachy.Sdk.Kinematics.JointPosition();
            }
            input.ReadMessage(Q0);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(Target);
            break;
          }
          case 18: {
            if (q0_ == null) {
              Q0 = new global::Reachy.Sdk.Kinematics.JointPosition();
            }
            input.ReadMessage(Q0);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmIKSolution : pb::IMessage<ArmIKSolution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmIKSolution> _parser = new pb::MessageParser<ArmIKSolution>(() => new ArmIKSolution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmIKSolution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKSolution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKSolution(ArmIKSolution other) : this() {
      success_ = other.success_;
      armPosition_ = other.armPosition_ != null ? other.armPosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmIKSolution Clone() {
      return new ArmIKSolution(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "arm_position" field.</summary>
    public const int ArmPositionFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.ArmJointPosition armPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmJointPosition ArmPosition {
      get { return armPosition_; }
      set {
        armPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmIKSolution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmIKSolution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(ArmPosition, other.ArmPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (armPosition_ != null) hash ^= ArmPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (armPosition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArmPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (armPosition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArmPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (armPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArmPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmIKSolution other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.armPosition_ != null) {
        if (armPosition_ == null) {
          ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
        }
        ArmPosition.MergeFrom(other.ArmPosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (armPosition_ == null) {
              ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
            }
            input.ReadMessage(ArmPosition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (armPosition_ == null) {
              ArmPosition = new global::Reachy.Sdk.Kinematics.ArmJointPosition();
            }
            input.ReadMessage(ArmPosition);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
