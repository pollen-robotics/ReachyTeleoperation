// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mobile_platform_reachy.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Reachy.Sdk.Mobility {
  public static partial class MobilityService
  {
    static readonly string __ServiceName = "reachy.sdk.mobility.MobilityService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.TargetDirectionCommand> __Marshaller_reachy_sdk_mobility_TargetDirectionCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.TargetDirectionCommand.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.MobilityServiceAck> __Marshaller_reachy_sdk_mobility_MobilityServiceAck = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.MobilityServiceAck.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.SetSpeedVector> __Marshaller_reachy_sdk_mobility_SetSpeedVector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.SetSpeedVector.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.GoToVector> __Marshaller_reachy_sdk_mobility_GoToVector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.GoToVector.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.DistanceToGoalVector> __Marshaller_reachy_sdk_mobility_DistanceToGoalVector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.DistanceToGoalVector.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.ControlModeCommand> __Marshaller_reachy_sdk_mobility_ControlModeCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.ControlModeCommand.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.ZuuuModeCommand> __Marshaller_reachy_sdk_mobility_ZuuuModeCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.ZuuuModeCommand.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.BatteryLevel> __Marshaller_reachy_sdk_mobility_BatteryLevel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.BatteryLevel.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.OdometryVector> __Marshaller_reachy_sdk_mobility_OdometryVector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.OdometryVector.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest> __Marshaller_reachy_sdk_mobility_SetZuuuSafetyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest.Parser));

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.TargetDirectionCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SendDirection = new grpc::Method<global::Reachy.Sdk.Mobility.TargetDirectionCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendDirection",
        __Marshaller_reachy_sdk_mobility_TargetDirectionCommand,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.SetSpeedVector, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SendSetSpeed = new grpc::Method<global::Reachy.Sdk.Mobility.SetSpeedVector, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendSetSpeed",
        __Marshaller_reachy_sdk_mobility_SetSpeedVector,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.GoToVector, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SendGoTo = new grpc::Method<global::Reachy.Sdk.Mobility.GoToVector, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendGoTo",
        __Marshaller_reachy_sdk_mobility_GoToVector,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.DistanceToGoalVector> __Method_DistanceToGoal = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.DistanceToGoalVector>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DistanceToGoal",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_DistanceToGoalVector);

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.ControlModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SetControlMode = new grpc::Method<global::Reachy.Sdk.Mobility.ControlModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetControlMode",
        __Marshaller_reachy_sdk_mobility_ControlModeCommand,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ControlModeCommand> __Method_GetControlMode = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ControlModeCommand>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetControlMode",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_ControlModeCommand);

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.ZuuuModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SetZuuuMode = new grpc::Method<global::Reachy.Sdk.Mobility.ZuuuModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetZuuuMode",
        __Marshaller_reachy_sdk_mobility_ZuuuModeCommand,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ZuuuModeCommand> __Method_GetZuuuMode = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ZuuuModeCommand>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetZuuuMode",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_ZuuuModeCommand);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.BatteryLevel> __Method_GetBatteryLevel = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.BatteryLevel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBatteryLevel",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_BatteryLevel);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.OdometryVector> __Method_GetOdometry = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.OdometryVector>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOdometry",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_OdometryVector);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_ResetOdometry = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetOdometry",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    static readonly grpc::Method<global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest, global::Reachy.Sdk.Mobility.MobilityServiceAck> __Method_SetZuuuSafety = new grpc::Method<global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest, global::Reachy.Sdk.Mobility.MobilityServiceAck>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetZuuuSafety",
        __Marshaller_reachy_sdk_mobility_SetZuuuSafetyRequest,
        __Marshaller_reachy_sdk_mobility_MobilityServiceAck);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Reachy.Sdk.Mobility.MobilePlatformReachyReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MobilityService</summary>
    [grpc::BindServiceMethod(typeof(MobilityService), "BindService")]
    public abstract partial class MobilityServiceBase
    {
      /// <summary>
      /// Mobility commands
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendDirection(global::Reachy.Sdk.Mobility.TargetDirectionCommand request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendSetSpeed(global::Reachy.Sdk.Mobility.SetSpeedVector request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendGoTo(global::Reachy.Sdk.Mobility.GoToVector request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GoTo management
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.DistanceToGoalVector> DistanceToGoal(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Utility
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetControlMode(global::Reachy.Sdk.Mobility.ControlModeCommand request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.ControlModeCommand> GetControlMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuMode(global::Reachy.Sdk.Mobility.ZuuuModeCommand request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.ZuuuModeCommand> GetZuuuMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.BatteryLevel> GetBatteryLevel(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.OdometryVector> GetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> ResetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuSafety(global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MobilityService</summary>
    public partial class MobilityServiceClient : grpc::ClientBase<MobilityServiceClient>
    {
      /// <summary>Creates a new client for MobilityService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MobilityServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MobilityService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MobilityServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MobilityServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MobilityServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Mobility commands
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendDirection(global::Reachy.Sdk.Mobility.TargetDirectionCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendDirection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Mobility commands
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendDirection(global::Reachy.Sdk.Mobility.TargetDirectionCommand request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendDirection, null, options, request);
      }
      /// <summary>
      /// Mobility commands
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendDirectionAsync(global::Reachy.Sdk.Mobility.TargetDirectionCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendDirectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Mobility commands
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendDirectionAsync(global::Reachy.Sdk.Mobility.TargetDirectionCommand request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendDirection, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendSetSpeed(global::Reachy.Sdk.Mobility.SetSpeedVector request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSetSpeed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendSetSpeed(global::Reachy.Sdk.Mobility.SetSpeedVector request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendSetSpeed, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendSetSpeedAsync(global::Reachy.Sdk.Mobility.SetSpeedVector request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSetSpeedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendSetSpeedAsync(global::Reachy.Sdk.Mobility.SetSpeedVector request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendSetSpeed, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendGoTo(global::Reachy.Sdk.Mobility.GoToVector request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendGoTo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SendGoTo(global::Reachy.Sdk.Mobility.GoToVector request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendGoTo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendGoToAsync(global::Reachy.Sdk.Mobility.GoToVector request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendGoToAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SendGoToAsync(global::Reachy.Sdk.Mobility.GoToVector request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendGoTo, null, options, request);
      }
      /// <summary>
      /// GoTo management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.DistanceToGoalVector DistanceToGoal(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DistanceToGoal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GoTo management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.DistanceToGoalVector DistanceToGoal(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DistanceToGoal, null, options, request);
      }
      /// <summary>
      /// GoTo management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.DistanceToGoalVector> DistanceToGoalAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DistanceToGoalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GoTo management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.DistanceToGoalVector> DistanceToGoalAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DistanceToGoal, null, options, request);
      }
      /// <summary>
      /// Utility
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetControlMode(global::Reachy.Sdk.Mobility.ControlModeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetControlMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Utility
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetControlMode(global::Reachy.Sdk.Mobility.ControlModeCommand request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetControlMode, null, options, request);
      }
      /// <summary>
      /// Utility
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetControlModeAsync(global::Reachy.Sdk.Mobility.ControlModeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetControlModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Utility
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetControlModeAsync(global::Reachy.Sdk.Mobility.ControlModeCommand request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetControlMode, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.ControlModeCommand GetControlMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetControlMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.ControlModeCommand GetControlMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetControlMode, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.ControlModeCommand> GetControlModeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetControlModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.ControlModeCommand> GetControlModeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetControlMode, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetZuuuMode(global::Reachy.Sdk.Mobility.ZuuuModeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetZuuuMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetZuuuMode(global::Reachy.Sdk.Mobility.ZuuuModeCommand request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetZuuuMode, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuModeAsync(global::Reachy.Sdk.Mobility.ZuuuModeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetZuuuModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuModeAsync(global::Reachy.Sdk.Mobility.ZuuuModeCommand request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetZuuuMode, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.ZuuuModeCommand GetZuuuMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetZuuuMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.ZuuuModeCommand GetZuuuMode(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetZuuuMode, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.ZuuuModeCommand> GetZuuuModeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetZuuuModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.ZuuuModeCommand> GetZuuuModeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetZuuuMode, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.BatteryLevel GetBatteryLevel(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBatteryLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.BatteryLevel GetBatteryLevel(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBatteryLevel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.BatteryLevel> GetBatteryLevelAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBatteryLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.BatteryLevel> GetBatteryLevelAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBatteryLevel, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.OdometryVector GetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOdometry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.OdometryVector GetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOdometry, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.OdometryVector> GetOdometryAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOdometryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.OdometryVector> GetOdometryAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOdometry, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck ResetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetOdometry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck ResetOdometry(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetOdometry, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> ResetOdometryAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetOdometryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> ResetOdometryAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetOdometry, null, options, request);
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetZuuuSafety(global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetZuuuSafety(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobilityServiceAck SetZuuuSafety(global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetZuuuSafety, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuSafetyAsync(global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetZuuuSafetyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobilityServiceAck> SetZuuuSafetyAsync(global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetZuuuSafety, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MobilityServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MobilityServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MobilityServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendDirection, serviceImpl.SendDirection)
          .AddMethod(__Method_SendSetSpeed, serviceImpl.SendSetSpeed)
          .AddMethod(__Method_SendGoTo, serviceImpl.SendGoTo)
          .AddMethod(__Method_DistanceToGoal, serviceImpl.DistanceToGoal)
          .AddMethod(__Method_SetControlMode, serviceImpl.SetControlMode)
          .AddMethod(__Method_GetControlMode, serviceImpl.GetControlMode)
          .AddMethod(__Method_SetZuuuMode, serviceImpl.SetZuuuMode)
          .AddMethod(__Method_GetZuuuMode, serviceImpl.GetZuuuMode)
          .AddMethod(__Method_GetBatteryLevel, serviceImpl.GetBatteryLevel)
          .AddMethod(__Method_GetOdometry, serviceImpl.GetOdometry)
          .AddMethod(__Method_ResetOdometry, serviceImpl.ResetOdometry)
          .AddMethod(__Method_SetZuuuSafety, serviceImpl.SetZuuuSafety).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MobilityServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SendDirection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.TargetDirectionCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SendDirection));
      serviceBinder.AddMethod(__Method_SendSetSpeed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.SetSpeedVector, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SendSetSpeed));
      serviceBinder.AddMethod(__Method_SendGoTo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.GoToVector, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SendGoTo));
      serviceBinder.AddMethod(__Method_DistanceToGoal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.DistanceToGoalVector>(serviceImpl.DistanceToGoal));
      serviceBinder.AddMethod(__Method_SetControlMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.ControlModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SetControlMode));
      serviceBinder.AddMethod(__Method_GetControlMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ControlModeCommand>(serviceImpl.GetControlMode));
      serviceBinder.AddMethod(__Method_SetZuuuMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.ZuuuModeCommand, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SetZuuuMode));
      serviceBinder.AddMethod(__Method_GetZuuuMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.ZuuuModeCommand>(serviceImpl.GetZuuuMode));
      serviceBinder.AddMethod(__Method_GetBatteryLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.BatteryLevel>(serviceImpl.GetBatteryLevel));
      serviceBinder.AddMethod(__Method_GetOdometry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.OdometryVector>(serviceImpl.GetOdometry));
      serviceBinder.AddMethod(__Method_ResetOdometry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.ResetOdometry));
      serviceBinder.AddMethod(__Method_SetZuuuSafety, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Reachy.Sdk.Mobility.SetZuuuSafetyRequest, global::Reachy.Sdk.Mobility.MobilityServiceAck>(serviceImpl.SetZuuuSafety));
    }

  }
  public static partial class MobileBasePresenceService
  {
    static readonly string __ServiceName = "reachy.sdk.mobility.MobileBasePresenceService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::Reachy.Sdk.Mobility.MobileBasePresence> __Marshaller_reachy_sdk_mobility_MobileBasePresence = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Reachy.Sdk.Mobility.MobileBasePresence.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobileBasePresence> __Method_GetMobileBasePresence = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobileBasePresence>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMobileBasePresence",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_reachy_sdk_mobility_MobileBasePresence);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Reachy.Sdk.Mobility.MobilePlatformReachyReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of MobileBasePresenceService</summary>
    [grpc::BindServiceMethod(typeof(MobileBasePresenceService), "BindService")]
    public abstract partial class MobileBasePresenceServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Reachy.Sdk.Mobility.MobileBasePresence> GetMobileBasePresence(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MobileBasePresenceService</summary>
    public partial class MobileBasePresenceServiceClient : grpc::ClientBase<MobileBasePresenceServiceClient>
    {
      /// <summary>Creates a new client for MobileBasePresenceService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MobileBasePresenceServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MobileBasePresenceService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MobileBasePresenceServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MobileBasePresenceServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MobileBasePresenceServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Reachy.Sdk.Mobility.MobileBasePresence GetMobileBasePresence(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMobileBasePresence(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Reachy.Sdk.Mobility.MobileBasePresence GetMobileBasePresence(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMobileBasePresence, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobileBasePresence> GetMobileBasePresenceAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMobileBasePresenceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Reachy.Sdk.Mobility.MobileBasePresence> GetMobileBasePresenceAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMobileBasePresence, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MobileBasePresenceServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MobileBasePresenceServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MobileBasePresenceServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetMobileBasePresence, serviceImpl.GetMobileBasePresence).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MobileBasePresenceServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetMobileBasePresence, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Reachy.Sdk.Mobility.MobileBasePresence>(serviceImpl.GetMobileBasePresence));
    }

  }
}
#endregion
